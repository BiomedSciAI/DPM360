{{- with .Values.minio }}
{{- if .enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: minio-mlflow-db
  name: minio-mlflow-db
spec:
  progressDeadlineSeconds: 2147483647
  replicas: 1
  revisionHistoryLimit: 2147483647
  selector:
    matchLabels:
      run: minio-mlflow-db
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: minio-mlflow-db
      name: minio-mlflow-db
    spec:
      containers:
      - env:
        - name: MINIO_ACCESS_KEY
          value:  {{.accessKey }}
        - name: MINIO_SECRET_KEY
          value:  {{.secretKey }}
        - name: MINIO_ROOT_USER
          value:  {{.rootuser}}
        - name: MINIO_ROOT_PASSWORD
          value:  {{.rootpassword}}
        image: "{{ .image.registry }}/{{ .image.repository }}:{{ .image.tag }}"
        imagePullPolicy: Always
        args:
        - server
        - /data
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /minio/health/live
            port: 9000
            scheme: HTTP
          initialDelaySeconds: 120
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 1
        name: minio-mlflow-db
        ports:
        - containerPort: {{ .containerport }}
          name: port
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /minio/health/ready
            port: {{ .httpport }}
            scheme: HTTP
          initialDelaySeconds: 120
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: {{ .resources.limits.cpu }}
            memory: {{ .resources.limits.memory }}
          requests:
            cpu: {{ .resources.requests.cpu }}
            memory: {{ .resources.requests.memory }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /data
          name: minio-mlflow-db-pvc
      dnsPolicy: ClusterFirst
      hostname: minio-mlflow-db
      imagePullSecrets:
      {{- with $.Values.imagePullSecrets }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: minio-mlflow-db-pvc
        persistentVolumeClaim:
          claimName: {{ .persistence.existingClaim }}
status: {}
{{- end }}
{{- end }}